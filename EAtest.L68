00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 6/3/2019 11:10:41 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  *hard code sample EA bits
00001000                            10  *technically, only need to store 6 bits per, (< 1 byte)
00001000                            11  *Can store them in longs anyways
00001000  =00009000                 12  DNEX1   EQU $9000
00001000  =00009050                 13  DNEX2   EQU $9050
00001000                            14  
00001000  =00009008                 15  ANEX1   EQU $9008
00001000  =00009010                 16  ANIEX1  EQU $9010
00001000  =00009018                 17  INCEX1  EQU $9018
00001000  =00009020                 18  DECEX1  EQU $9020
00001000  =00009028                 19  ABSWEX1 EQU $9028
00001000  =00009030                 20  ABSLEX1 EQU $9030
00001000  =00009038                 21  IMEX1   EQU $9038
00001000  =00009040                 22  ERREX1  EQU $9040
00001000  =00009048                 23  FULLEX1 EQU $9048
00001000  =00009058                 24  FULLEX2 EQU $9058
00001000                            25  
00001000                            26  
00001000                            27  *NEED TO MARK GOOD BUFFER
00001000                            28  *GOODBUFFER nop
00001000                            29  
00001000                            30  *Load a full test to be split and identified
00001000                            31  *assumption that ordering is source, so Mode, then Register
00001000                            32  * bits --> 00000111 --> 2 empty bits, 
00001000                            33  *3 bits identifying as data register mode
00001000                            34  *3 bits identifying as register number 7
00001000  43F9 00009048             35          LEA FULLEX1,A1
00001006  12BC 0007                 36          MOVE.B #7,(A1)
0000100A                            37          
0000100A                            38          
0000100A                            39  *LOAD ALT FULL TEST
0000100A                            40  *REGISTER THEN MODE
0000100A                            41  *3 bits as register 7
0000100A                            42  *3 bits as data register mode
0000100A                            43  *00111000
0000100A                            44  
0000100A  43F9 00009058             45          LEA FULLEX2,A1
00001010  12BC 0038                 46          MOVE.B #56,(A1)
00001014                            47  
00001014                            48  
00001014                            49          
00001014                            50          
00001014                            51  
00001014                            52  *Load MODE values
00001014  43F9 00009000             53          LEA DNEX1,A1
0000101A  12BC 0000                 54          MOVE.B #0,(A1)
0000101E                            55          
0000101E  43F9 00009050             56          LEA DNEX2,A1
00001024  12BC 0005                 57          MOVE.B #5,(A1)
00001028                            58          
00001028  43F9 00009008             59          LEA ANEX1,A1
0000102E  12BC 0001                 60          MOVE.B #1,(A1)
00001032                            61          
00001032  43F9 00009010             62          LEA ANIEX1,A1
00001038  12BC 0002                 63          MOVE.B #2,(A1)
0000103C                            64          
0000103C  43F9 00009018             65          LEA INCEX1,A1
00001042  12BC 0003                 66          MOVE.B #3,(A1)
00001046                            67          
00001046  43F9 00009020             68          LEA DECEX1,A1
0000104C  12BC 0004                 69          MOVE.B #4,(A1)
00001050                            70          
00001050  43F9 00009028             71          LEA ABSWEX1,A1
00001056  12BC 0007                 72          MOVE.B #7,(A1)
0000105A                            73          
0000105A  43F9 00009030             74          LEA ABSLEX1,A1
00001060  12BC 0007                 75          MOVE.B #7,(A1)
00001064                            76          
00001064  43F9 00009038             77          LEA IMEX1,A1
0000106A  12BC 0007                 78          MOVE.B #7,(A1)
0000106E                            79  
0000106E  43F9 00009040             80          LEA ERREX1,A1
00001074  12BC 000F                 81          MOVE.B #15,(A1)        
00001078                            82  
00001078                            83  
00001078                            84  
00001078                            85  *Load a full test to be split and identified
00001078                            86  *assumption that ordering is source, so Mode, then Register
00001078                            87  * bits --> 00000111 --> 2 empty bits, 
00001078                            88  *3 bits identifying as data register mode
00001078                            89  *3 bits identifying as register number 7
00001078                            90  *        LEA FULLEX1,A1
00001078                            91  *        MOVE.B #7,(A1)
00001078                            92  
00001078                            93  
00001078                            94  
00001078                            95  *May need to clear and initialize data registers
00001078                            96  
00001078                            97  *
00001078                            98  *
00001078                            99  *REG/MODE SPLIT
00001078                           100  *
00001078                           101  *
00001078                           102  SPLITREGSET    
00001078  4244                     103      CLR     D4
0000107A  4245                     104      CLR     D5
0000107C                           105      *REMOVE THIS TEST LATER
0000107C  43F9 00009048            106      LEA     FULLEX1,A1
00001082  2611                     107      MOVE.L  (A1),D3
00001084  7801                     108      MOVE.L  #1,D4
00001086  7A04                     109      MOVE.L  #4,D5
00001088                           110      
00001088                           111      *setup loop
00001088                           112  SPLITREG
00001088  BA84                     113      CMP.L   D4,D5
0000108A  6700 0040                114      BEQ     SPLITMODESET
0000108E  E28B                     115      LSR.L   #$1,D3
00001090                           116      *Check for carry flag set from logical right shifting
00001090  6500 0006                117      BCS     REGCHANGE
00001094                           118      *If not, just add and loop. (No changes to output D7)
00001094  5284                     119      ADDQ.L  #1,D4
00001096  60F0                     120      BRA     SPLITREG
00001098                           121      
00001098                           122      *loop 3x
00001098                           123      *OVE.B
00001098                           124      
00001098                           125  
00001098                           126  *Check for current iteration (each loop is on a different bit)
00001098                           127  REGCHANGE
00001098  B8BC 00000001            128      CMP.L   #1,D4
0000109E  6700 001A                129      BEQ     REG1BIT
000010A2  B8BC 00000002            130      CMP.L   #2,D4
000010A8  6700 0016                131      BEQ     REG2BIT
000010AC  B8BC 00000003            132      CMP.L   #3,D4
000010B2  6700 0012                133      BEQ     REG3BIT
000010B6                           134      
000010B6  5284                     135      ADDQ.L  #1,D4
000010B8  60CE                     136      BRA     SPLITREG
000010BA                           137  
000010BA                           138  *If carry set and 1st bit
000010BA                           139  *add 1 to D7
000010BA                           140  *which sets first bit of D7 to 1
000010BA                           141  REG1BIT
000010BA  5287                     142      ADDQ.L  #1,D7
000010BC  5284                     143      ADDQ.L  #1,D4
000010BE  60C8                     144      BRA     SPLITREG
000010C0                           145  REG2BIT
000010C0  5487                     146      ADDQ.L  #2,D7    
000010C2  5284                     147      ADDQ.L  #1,D4
000010C4  60C2                     148      BRA     SPLITREG
000010C6                           149  REG3BIT
000010C6  5887                     150      ADDQ.L  #4,D7    
000010C8  5284                     151      ADDQ.L  #1,D4
000010CA  60BC                     152      BRA     SPLITREG
000010CC                           153      
000010CC                           154  SPLITMODESET
000010CC  4244                     155      CLR D4
000010CE  4245                     156      CLR D5
000010D0  7801                     157      MOVE.L  #1,D4
000010D2  7A04                     158      MOVE.L  #4,D5
000010D4                           159      
000010D4                           160  SPLITMODE
000010D4  BA84                     161      CMP.L   D4,D5
000010D6  6700 00DE                162      BEQ     MODE
000010DA  E28B                     163      LSR.L   #$1,D3
000010DC  6500 0006                164      BCS     MODECHANGE
000010E0  5284                     165      ADDQ.L  #1,D4
000010E2  60F0                     166      BRA     SPLITMODE
000010E4                           167      
000010E4                           168      
000010E4                           169  MODECHANGE
000010E4  B8BC 00000001            170      CMP.L   #1,D4
000010EA  6700 001A                171      BEQ     MODE1BIT
000010EE  B8BC 00000002            172      CMP.L   #2,D4
000010F4  6700 0016                173      BEQ     MODE2BIT
000010F8  B8BC 00000003            174      CMP.L   #3,D4
000010FE  6700 0012                175      BEQ     MODE3BIT
00001102  5284                     176      ADDQ.L  #1,D4
00001104  60CE                     177      BRA     SPLITMODE
00001106                           178      
00001106                           179  MODE1BIT
00001106  5286                     180      ADDQ.L  #1,D6
00001108  5284                     181      ADDQ.L  #1,D4
0000110A  60C8                     182      BRA     SPLITMODE
0000110C                           183  MODE2BIT
0000110C  5486                     184      ADDQ.L  #2,D6
0000110E  5284                     185      ADDQ.L  #1,D4
00001110  60C2                     186      BRA     SPLITMODE
00001112                           187  MODE3BIT
00001112  5886                     188      ADDQ.L  #4,D6
00001114  5284                     189      ADDQ.L  #1,D4
00001116  60BC                     190      BRA     SPLITMODE    
00001118                           191  
00001118                           192  *
00001118                           193  *
00001118                           194  *MODE/REG SPLIT
00001118                           195  *
00001118                           196  *
00001118                           197  
00001118                           198  MODESPLITSET
00001118  4244                     199      CLR D4
0000111A  4245                     200      CLR D5
0000111C  7801                     201      MOVE.L  #1,D4
0000111E  7A04                     202      MOVE.L  #4,D5
00001120                           203      
00001120                           204  MODESPLIT
00001120  BA84                     205      CMP.L   D4,D5
00001122  6700 0040                206      BEQ     REGSPLITSET
00001126  E28B                     207      LSR.L   #$1,D3
00001128  6500 0006                208      BCS     CHANGEMODE
0000112C  5284                     209      ADDQ.L  #1,D4
0000112E  60F0                     210      BRA     MODESPLIT
00001130                           211      
00001130                           212      
00001130                           213  CHANGEMODE
00001130  B8BC 00000001            214      CMP.L   #1,D4
00001136  6700 001A                215      BEQ     BITMODE1
0000113A  B8BC 00000002            216      CMP.L   #2,D4
00001140  6700 0016                217      BEQ     BITMODE2
00001144  B8BC 00000003            218      CMP.L   #3,D4
0000114A  6700 0012                219      BEQ     BITMODE3
0000114E  5284                     220      ADDQ.L  #1,D4
00001150  60CE                     221      BRA     MODESPLIT
00001152                           222  
00001152                           223  BITMODE1
00001152  5286                     224      ADDQ.L  #1,D6
00001154  5284                     225      ADDQ.L  #1,D4
00001156  60C8                     226      BRA     MODESPLIT
00001158                           227  BITMODE2
00001158  5486                     228      ADDQ.L  #2,D6
0000115A  5284                     229      ADDQ.L  #1,D4
0000115C  60C2                     230      BRA     MODESPLIT
0000115E                           231  BITMODE3
0000115E  5886                     232      ADDQ.L  #4,D6
00001160  5284                     233      ADDQ.L  #1,D4
00001162  60BC                     234      BRA     MODESPLIT 
00001164                           235  
00001164                           236  REGSPLITSET  
00001164  4244                     237      CLR D4
00001166  4245                     238      CLR D5
00001168  7801                     239      MOVE.L  #1,D4
0000116A  7A04                     240      MOVE.L  #4,D5
0000116C                           241      
0000116C                           242  REGSPLIT
0000116C  BA84                     243      CMP.L   D4,D5
0000116E  6700 0046                244      BEQ     MODE
00001172  E28B                     245      LSR.L   #$1,D3
00001174  6500 0006                246      BCS     CHANGEREG
00001178  5284                     247      ADDQ.L  #1,D4
0000117A  60F0                     248      BRA     REGSPLIT
0000117C                           249  
0000117C                           250  CHANGEREG  
0000117C  B8BC 00000001            251      CMP.L   #1,D4
00001182  6700 001A                252      BEQ     BITREG1
00001186  B8BC 00000002            253      CMP.L   #2,D4
0000118C  6700 0016                254      BEQ     BITREG2
00001190  B8BC 00000003            255      CMP.L   #3,D4
00001196  6700 0012                256      BEQ     BITREG3
0000119A  5284                     257      ADDQ.L  #1,D4
0000119C  60CE                     258      BRA     REGSPLIT
0000119E                           259      
0000119E                           260  BITREG1
0000119E  5287                     261      ADDQ.L  #1,D7
000011A0  5284                     262      ADDQ.L  #1,D4
000011A2  60C8                     263      BRA     REGSPLIT
000011A4                           264  BITREG2
000011A4  5487                     265      ADDQ.L  #2,D7
000011A6  5284                     266      ADDQ.L  #1,D4
000011A8  60C2                     267      BRA     REGSPLIT
000011AA                           268  BITREG3
000011AA  5887                     269      ADDQ.L  #4,D7
000011AC  5284                     270      ADDQ.L  #1,D4
000011AE  60BC                     271      BRA     REGSPLIT 
000011B0                           272  
000011B0                           273        
000011B0                           274  *can keep Mode D6, Register D7
000011B0                           275  *will always be same case from MODE onwards
000011B0                           276  
000011B0                           277  
000011B0                           278  *
000011B0                           279  *
000011B0                           280  *MODE SECTION
000011B0                           281  *if mode =
000011B0                           282  *    
000011B0                           283  
000011B0                           284      *REMOVE TEST!?!?!?
000011B0                           285      *Load test
000011B0  43F9 00009000            286      LEA DNEX1,A1
000011B6                           287  
000011B6                           288  MODE
000011B6  4244                     289      CLR D4
000011B8  4245                     290      CLR D5
000011BA                           291      *Move to data register
000011BA  2A11                     292      MOVE.L (A1),D5
000011BC                           293  
000011BC                           294      *if D5
000011BC                           295      
000011BC                           296      *0 == da
000011BC                           297      *CMP.L   #0,D5
000011BC                           298      *BEQ     DATAREG
000011BC                           299      
000011BC                           300      *CMP.L   #1,D5
000011BC                           301      *BEQ     ADDREG
000011BC                           302      
000011BC                           303      *CMP.L   #2,D5
000011BC                           304      *BEQ     INDIRECT
000011BC                           305      
000011BC                           306      *CMP.L   #3,D5
000011BC                           307      *BEQ     INCREMENT
000011BC                           308      
000011BC                           309      *CMP.L   #4,D5
000011BC                           310      *BEQ     DECREMENT
000011BC                           311      
000011BC                           312      *CMP.L   #7,D5
000011BC                           313      *BEQ     ABSOLUTE
000011BC                           314      
000011BC                           315      *BRA     ERROR
000011BC                           316      
000011BC  BCBC 00000000            317      CMP.L   #0,D6
000011C2  6700 0038                318      BEQ     DATAREG
000011C6                           319      
000011C6  BCBC 00000001            320      CMP.L   #1,D6
000011CC  6700 008C                321      BEQ     ADDREG
000011D0                           322      
000011D0  BCBC 00000002            323      CMP.L   #2,D6
000011D6  6700 0086                324      BEQ     INDIRECT
000011DA                           325      
000011DA  BCBC 00000003            326      CMP.L   #3,D6
000011E0  6700 0084                327      BEQ     INCREMENT
000011E4                           328      
000011E4  BCBC 00000004            329      CMP.L   #4,D6
000011EA  6700 0076                330      BEQ     DECREMENT
000011EE                           331      
000011EE  BCBC 00000007            332      CMP.L   #7,D6
000011F4  6700 0074                333      BEQ     ABSOLUTE
000011F8                           334      
000011F8  6000 0076                335      BRA     ERROR
000011FC                           336  
000011FC                           337  
000011FC                           338  *different addresses
000011FC                           339  
000011FC                           340  
000011FC                           341  *If data register, 
000011FC                           342  *check correct register
000011FC                           343  *return char value
000011FC                           344  DATAREG     
000011FC  BEBC 00000000            345      CMP.L   #0,D7
00001202  6700 004C                346      BEQ     PUSHD0
00001206  BEBC 00000001            347      CMP.L   #1,D7
0000120C  6700 004C                348      BEQ     PUSHD1
00001210  BEBC 00000002            349      CMP.L   #2,D7
00001216  6700 0042                350      BEQ     PUSHD2
0000121A  BEBC 00000003            351      CMP.L   #3,D7
00001220  6700 0038                352      BEQ     PUSHD3
00001224  BEBC 00000004            353      CMP.L   #4,D7
0000122A  6700 002E                354      BEQ     PUSHD4
0000122E  BEBC 00000005            355      CMP.L   #5,D7
00001234  6700 0024                356      BEQ     PUSHD5
00001238  BEBC 00000006            357      CMP.L   #6,D7
0000123E  6700 001A                358      BEQ     PUSHD6
00001242  BEBC 00000007            359      CMP.L   #7,D7
00001248  6700 0010                360      BEQ     PUSHD7
0000124C  6000 0022                361      BRA ERROR
00001250                           362  
00001250                           363  PUSHD0
00001250  22F9 00001274            364      MOVE.L  DZERO,(A1)+
00001256  6000 001A                365      BRA FINISH
0000125A                           366      
0000125A                           367  PUSHD1
0000125A                           368  PUSHD2
0000125A                           369  PUSHD3
0000125A                           370  PUSHD4
0000125A                           371  PUSHD5
0000125A                           372  PUSHD6
0000125A                           373  PUSHD7
0000125A                           374  
0000125A                           375      
0000125A                           376  ADDREG      
0000125A  6000 0014                377      BRA ERROR
0000125E                           378  
0000125E                           379  INDIRECT    
0000125E  6000 0010                380      BRA ERROR
00001262                           381  DECREMENT   
00001262  6000 000C                382      BRA ERROR
00001266                           383  
00001266                           384  INCREMENT   
00001266  6000 0008                385      BRA ERROR
0000126A                           386  
0000126A                           387  
0000126A                           388  *For absolute, try storing address in data register, then converting all values to string
0000126A                           389  *subtraction for letters and numbers
0000126A                           390  *Josh may have something
0000126A                           391  *
0000126A                           392  ABSOLUTE
0000126A                           393      
0000126A                           394      
0000126A  6000 0004                395      BRA ERROR
0000126E                           396      *load corresponding registers
0000126E                           397      
0000126E                           398      
0000126E                           399      
0000126E                           400      *Move to data register
0000126E  2A11                     401      MOVE.L (A1),D5
00001270                           402      
00001270                           403      
00001270                           404  
00001270  4E71                     405  ERROR       NOP
00001272                           406  
00001272                           407  
00001272                           408  
00001272  4E71                     409  FINISH    NOP 
00001274                           410  
00001274                           411  *Calculate hex equivalent of bit values
00001274                           412  *MODES
00001274                           413  *000 --> 0
00001274                           414  *001 --> 1
00001274                           415  *010 --> 2
00001274                           416  *011 --> 3
00001274                           417  *100 --> 4
00001274                           418  *111 --> 7
00001274                           419  *ELSE, BAD FLAG
00001274                           420  
00001274                           421  *Register Values
00001274                           422  *0 through 7
00001274                           423  
00001274                           424  *Absolute Register Values
00001274                           425  *000 --> 0 = Absolute Addressing Word
00001274                           426  *001 --> 1 = Absolute Addressing Long
00001274                           427  *100 --> 4 = Immediate Data
00001274                           428  
00001274                           429  
00001274  =0000000D                430  CR      EQU     $0D         
00001274  =0000000A                431  LF      EQU     $0A 
00001274                           432  
00001274= 44 30 00                 433  DZERO   DC.B    'D0',0
00001277= 44 31 00                 434  DONE    DC.B    'D1',0
0000127A= 44 32 00                 435  DTWO    DC.B    'D2',0
0000127D= 44 33 00                 436  DTHREE  DC.B    'D3',0  
00001280= 44 34 00                 437  DFOUR   DC.B    'D4',0
00001283= 44 35 00                 438  DFIVE   DC.B    'D5',0
00001286= 44 36 00                 439  DSIX    DC.B    'D6',0
00001289= 44 37 00                 440  DSEVEN  DC.B    'D7',0
0000128C                           441  
0000128C= 41 30 00                 442  AZERO   DC.B    'A0',0
0000128F= 41 31 00                 443  AONE    DC.B    'A1',0
00001292= 41 32 00                 444  ATWO    DC.B    'A2',0
00001295= 41 33 00                 445  ATHREE  DC.B    'A3',0
00001298= 41 34 00                 446  AFOUR   DC.B    'A4',0
0000129B= 41 35 00                 447  AFIVE   DC.B    'A5',0
0000129E= 41 36 00                 448  ASIX    DC.B    'A6',0
000012A1                           449  
000012A1= 28 41 30 29 00           450  IZERO   DC.B    '(A0)',0
000012A6= 28 41 31 29 00           451  IONE    DC.B    '(A1)',0
000012AB= 28 41 32 29 00           452  ITWO    DC.B    '(A2)',0
000012B0= 28 41 33 29 00           453  ITHREE  DC.B    '(A3)',0
000012B5= 28 41 34 29 00           454  IFOUR   DC.B    '(A4)',0
000012BA= 28 41 36 29 00           455  IFIVE   DC.B    '(A6)',0
000012BF= 28 41 37 29 00           456  ISIX    DC.B    '(A7)',0
000012C4                           457  
000012C4= 2D 28 41 30 29 00        458  PREZERO DC.B    '-(A0)',0
000012CA= 2D 28 41 31 29 00        459  PREONE  DC.B    '-(A1)',0
000012D0= 2D 28 41 32 29 00        460  PRETWO  DC.B    '-(A2)',0
000012D6= 2D 28 41 33 29 00        461  PRETHREE DC.B   '-(A3)',0
000012DC= 2D 28 41 34 29 00        462  PREFOUR DC.B    '-(A4)',0
000012E2= 2D 28 41 35 29 00        463  PREFIVE DC.B    '-(A5)',0
000012E8= 2D 28 41 36 29 00        464  PRESIX  DC.B    '-(A6)',0
000012EE                           465  
000012EE= 28 41 30 29 2B 00        466  POZERO  DC.B    '(A0)+',0
000012F4= 28 41 31 29 2B 00        467  POONE   DC.B    '(A1)+',0
000012FA= 28 41 32 29 2B 00        468  POTWO   DC.B    '(A2)+',0
00001300= 28 41 33 29 2B 00        469  POTHREE DC.B    '(A3)+',0
00001306= 28 41 34 29 2B 00        470  POFOUR  DC.B    '(A4)+',0
0000130C= 28 41 35 29 2B 00        471  POFIVE  DC.B    '(A5)+',0
00001312= 28 41 36 29 2B 00        472  POSIX   DC.B    '(A6)+',0
00001318                           473  
00001318                           474  
00001318                           475  
00001318                           476  
00001318                           477  
00001318                           478  * Put program code here
00001318                           479  
00001318  FFFF FFFF                480      SIMHALT             ; halt simulator
0000131C                           481  
0000131C                           482  * Put variables and constants here
0000131C                           483  
0000131C                           484      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSLEX1             9030
ABSOLUTE            126A
ABSWEX1             9028
ADDREG              125A
AFIVE               129B
AFOUR               1298
ANEX1               9008
ANIEX1              9010
AONE                128F
ASIX                129E
ATHREE              1295
ATWO                1292
AZERO               128C
BITMODE1            1152
BITMODE2            1158
BITMODE3            115E
BITREG1             119E
BITREG2             11A4
BITREG3             11AA
CHANGEMODE          1130
CHANGEREG           117C
CR                  D
DATAREG             11FC
DECEX1              9020
DECREMENT           1262
DFIVE               1283
DFOUR               1280
DNEX1               9000
DNEX2               9050
DONE                1277
DSEVEN              1289
DSIX                1286
DTHREE              127D
DTWO                127A
DZERO               1274
ERREX1              9040
ERROR               1270
FINISH              1272
FULLEX1             9048
FULLEX2             9058
IFIVE               12BA
IFOUR               12B5
IMEX1               9038
INCEX1              9018
INCREMENT           1266
INDIRECT            125E
IONE                12A6
ISIX                12BF
ITHREE              12B0
ITWO                12AB
IZERO               12A1
LF                  A
MODE                11B6
MODE1BIT            1106
MODE2BIT            110C
MODE3BIT            1112
MODECHANGE          10E4
MODESPLIT           1120
MODESPLITSET        1118
POFIVE              130C
POFOUR              1306
POONE               12F4
POSIX               1312
POTHREE             1300
POTWO               12FA
POZERO              12EE
PREFIVE             12E2
PREFOUR             12DC
PREONE              12CA
PRESIX              12E8
PRETHREE            12D6
PRETWO              12D0
PREZERO             12C4
PUSHD0              1250
PUSHD1              125A
PUSHD2              125A
PUSHD3              125A
PUSHD4              125A
PUSHD5              125A
PUSHD6              125A
PUSHD7              125A
REG1BIT             10BA
REG2BIT             10C0
REG3BIT             10C6
REGCHANGE           1098
REGSPLIT            116C
REGSPLITSET         1164
SPLITMODE           10D4
SPLITMODESET        10CC
SPLITREG            1088
SPLITREGSET         1078
START               1000
