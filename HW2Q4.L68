00004000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 4/30/2019 10:34:49 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :Homework 2 Question 4
00000000                             3  * Written by :William Nguyen
00000000                             4  * Date       :4/26/19
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00004000                             7      ORG    $4000
00004000                             8  START:                  ; first instruction of program
00004000                             9  
00004000                            10  * Put program code here
00004000                            11  *"Please enter IEEE 32-bit floating point number in hexadecimal":
00004000                            12  *32 bits: 1 sign, 8 exponent, 23 mantissa
00004000                            13  *8 characters, 4 bits each
00004000  43F9 000040B4             14      LEA     MESSAGE,A1     
00004006  103C 000E                 15      MOVE.B  #14,D0          
0000400A  4E4F                      16      TRAP    #15
0000400C  43F9 000040ED             17      LEA     MESSAGE1,A1     
00004012  103C 000E                 18      MOVE.B  #14,D0          
00004016  4E4F                      19      TRAP    #15       
00004018                            20  
00004018                            21  *-------Code for input-------
00004018                            22      
00004018  43F9 00004170             23      LEA     STORE1,A1
0000401E  103C 0002                 24      MOVE.B  #2,D0           
00004022  4E4F                      25      TRAP    #15
00004024  21D1 2000                 26      MOVE.L  (A1),$2000 
00004028                            27      
00004028  43F9 00004113             28      LEA     MESSAGE2,A1     
0000402E  103C 000E                 29      MOVE.B  #14,D0          
00004032  4E4F                      30      TRAP    #15
00004034                            31     
00004034  43F9 00004174             32      LEA     STORE2,A1
0000403A  103C 0002                 33      MOVE.B  #2,D0     
0000403E  4E4F                      34      TRAP    #15
00004040  21D1 2004                 35      MOVE.L  (A1),$2004
00004044                            36      
00004044                            37      *checking output
00004044  2A39 00004170             38      MOVE.L  STORE1,D5
0000404A  2C39 00004174             39      MOVE.L  STORE2,D6
00004050                            40  
00004050                            41      *loop 8 times
00004050                            42      *loop through $1000-1008
00004050                            43      *resolve each value based on being a number or letter
00004050                            44  STFORA  *For Loop Preparations
00004050  7600                      45          MOVE.L  #0, D3
00004052  7808                      46          MOVE.L  #8,D4
00004054                            47          *Locations in address registers
00004054  47F8 2000                 48          LEA $00002000,A3
00004058                            49          *Example data to trigger
00004058                            50                 
00004058                            51          *Checking for loop
00004058  B803                      52  LOOPA   CMP.B   D3,D4
0000405A  6700 003E                 53          BEQ     NEXT
0000405E                            54          *CLEAR D5 and D6 before moving
0000405E  4245                      55          CLR     D5
00004060  4246                      56          CLR     D6
00004062                            57          *Moving address registers of locations to data registers
00004062  1A13                      58          MOVE.B  (A3),D5
00004064                            59  
00004064                            60          *comparing byte data of data register
00004064  BA3C 0030                 61  CHECK0  CMP.B   #$30,D5
00004068  6D00 0034                 62          BLT     INVALID         BLT branches if D1 is less than 30
0000406C  BA3C 0039                 63          CMP.B   #$39,D5           Compares D1 to 40
00004070  6E00 0006                 64          BGT     CHECK1         BGT branches if D1 is greater than 39
00004074  6000 0014                 65          BRA     SUBNUM0
00004078                            66  
00004078                            67  CHECK1
00004078  BA3C 0047                 68          CMP.B   #$47,D5           Compares D1 to 47
0000407C  6E00 0020                 69          BGT     INVALID         BGT branches if D1 is greater than 46
00004080  6000 0010                 70          BRA     SUBLET0 
00004084                            71  
00004084                            72  INC
00004084                            73          *Incrementing for loop
00004084  5283                      74          ADDQ.L  #1,D3
00004086                            75          *Incrementing address register location
00004086  1A1B                      76          MOVE.B  (A3)+,D5
00004088  60CE                      77          BRA     LOOPA
0000408A                            78          
0000408A                            79  SUBNUM0
0000408A  0405 0030                 80      SUBI.B  #$30,D5      Reduce to Binary equiv of 0-9
0000408E  1685                      81      MOVE.B  D5,(A3)
00004090  60F2                      82      BRA INC
00004092                            83  
00004092                            84  SUBLET0
00004092  0405 0037                 85      SUBI.B  #$37,D5      Reduce to Binary equiv of A-F
00004096  1685                      86      MOVE.B  D5,(A3)
00004098  60EA                      87      BRA INC
0000409A                            88  
0000409A                            89  *Find out Sign
0000409A                            90  NEXT        
0000409A                            91      
0000409A                            92  
0000409A                            93  
0000409A                            94  PRINT    
0000409A  6000 0012                 95          BRA DONE
0000409E                            96  
0000409E                            97      
0000409E  43F9 00004138             98  INVALID LEA     INV,A1
000040A4  103C 000E                 99          MOVE.B  #14,D0  
000040A8  4E4F                     100          TRAP    #15
000040AA  6000 0002                101          BRA     DONE
000040AE                           102              
000040AE  103C 0009                103  DONE    MOVE.B  #9,D0
000040B2  4E4F                     104          TRAP    #15             Halt Simulator        
000040B4                           105  
000040B4  =0000000D                106  CR      EQU     $0D         
000040B4  =0000000A                107  LF      EQU     $0A 
000040B4                           108  
000040B4= 49 6E 70 75 74 20 ...    109  MESSAGE  DC.B    'Input IEEE 32-bit floating point number in hexadecimal',CR,LF,0
000040ED= 50 6C 65 61 73 65 ...    110  MESSAGE1 DC.B    'Please enter the first 4 characters',CR,LF,0        
00004113= 50 6C 65 61 73 65 ...    111  MESSAGE2 DC.B    'Please enter the last 4 characters',CR,LF,0
00004138= 54 68 61 74 20 69 ...    112  INV      DC.B    'That is not between 30 and 46',CR,LF,0
00004158                           113  
00004158= 53 49 47 4E 0D 0A 00     114  MSG1    DC.B    'SIGN',CR,LF,0
0000415F= 45 58 50 0D 0A 00        115  MSG2    DC.B    'EXP',CR,LF,0
00004165= 4D 41 4E 54 49 53 ...    116  MSG3    DC.B    'MANTISSA',CR,LF,0
00004170                           117  
00004170= 00002000                 118  STORE1   DC.L    $00002000
00004174= 00002004                 119  STORE2   DC.L    $00002004
00004178                           120   
00004178                           121  
00004178  FFFF FFFF                122      SIMHALT             ; halt simulator
0000417C                           123   
0000417C                           124  * Put variables and constants here
0000417C                           125  
0000417C                           126      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CHECK0              4064
CHECK1              4078
CR                  D
DONE                40AE
INC                 4084
INV                 4138
INVALID             409E
LF                  A
LOOPA               4058
MESSAGE             40B4
MESSAGE1            40ED
MESSAGE2            4113
MSG1                4158
MSG2                415F
MSG3                4165
NEXT                409A
PRINT               409A
START               4000
STFORA              4050
STORE1              4170
STORE2              4174
SUBLET0             4092
SUBNUM0             408A
